#pragma once

/*
Robert Hellmann(2013) Ab initio potential energy surface for the carbon dioxide molecule pair
and thermophysical properties of dilute carbon dioxide gas, Chem.Phys.Lett
Link : https://dx.doi.org/10.1016/j.cplett.2014.08.057
*/

namespace HellmannCarbonDioxide{

// Get a fully instantiated class for carbon dioxide
auto get_integrator() {

    //X,Y,Z coordinates, in Angstrom
    std::vector<std::vector<double>> coords0 = {
        {-1.28741781626, 0, 0},
        {-1.18192825424, 0, 0},
        {-0.18607849166, 0, 0},
        {0.00000000000, 0, 0},
        {0.18607849166, 0, 0},
        {1.18192825424, 0, 0},
        {1.28741781626, 0, 0},
    };
    Molecule<double> m0(coords0);
    std::vector<double> qs = { -197.417207828, 168.070083318,-2559.64083227, 5177.97591356,-2559.64083227, 168.070083318,-197.417207828 };
    std::vector<char> types = { 'A','B','C','D','C','B','A' };
    std::map<std::tuple<char, char>, std::tuple<double, double, double, double, double>> coeffs = {
         {{'A','A'}, {-0.247910365353E+07, 2.08319218048, 3.14980106637, -0.306747626563E+08,  0.211522217149E+09}},
         {{'A','B'}, { 0.659160470472E+07, 3.16681447768, 2.46903752251,  0.698469835305E+08, -0.810638994730E+09}},
         {{'A','C'}, {-0.197776308389E+08, 2.46163539534, 1.57103563097, -0.143806191593E+09,  0.355929066714E+10}},
         {{'A','D'}, { 0.384165630648E+08, 2.48589087370, 1.89845841233,  0.121226824365E+09, -0.286891373977E+10}},
         {{'B','B'}, {-0.124570324466E+07, 1.67813668662, 2.14451960163, -0.109398472925E+09,  0.114677667224E+10}},
         {{'B','C'}, { 0.451317323034E+08, 2.65969570294, 1.46843191121,  0.811702881095E+08, -0.210805303525E+10}},
         {{'B','D'}, {-0.116048612008E+09, 2.77169644514, 4.14021127755,  0.263241896284E+08, -0.173569859005E+09}},
         {{'C','C'}, {-0.103079402689E+08, 2.98535796569, 2.72634741238,  0.126349448908E+09, -0.496759975158E+09}},
         {{'C','D'}, { 0.340824968085E+08, 2.75870881239, 2.44815795987, -0.285769208067E+09,  0.122323855871E+10}},
         {{'D','D'}, {-0.915027698701E+08, 2.87267355769, 2.27614875317,  0.551179708953E+09, -0.131218053988E+10}},
    };

    // Connect up the lambda functions for site-site interactions
    Integrator<double> integr(m0, m0);
    for (auto i = 0; i < qs.size(); ++i) {
        auto chari = types[i];
        auto q_i = qs[i];
        for (auto j = 0; j < qs.size(); ++j) {
            auto charj = types[j];
            auto q_j = qs[j];

            // Collect the coefficients for the given i,j pair
            auto typetup = std::make_tuple(std::min(chari, charj), std::max(chari, charj));
            auto [A_ij, alpha_ij, b_ij, C6_ij, C8_ij] = coeffs[typetup];

            // Pre-calculate some things so they need not be calculated in the potential function
            Eigen::ArrayXi ks = Eigen::ArrayXi::LinSpaced(9, 0, 8); // 0,...,7
            Eigen::ArrayXd factorialks = ks.unaryExpr([](const int n) {return factorial(n); }); // k!

            // The lambda function that will be used to evaluate the site-site interaction
            // The captures are captured by copy, and "baked" into the lambda
            auto ff = [q_i, q_j, A_ij, alpha_ij, b_ij, C6_ij, C8_ij, ks, factorialks](double R_ij) -> double {
                if (R_ij < 0.02) {
                    return 1e30;
                }
                Eigen::ArrayXd rbk(ks.size());
                for (auto i = 0; i < rbk.size(); ++i) {
                    rbk(i) = pow(R_ij*b_ij, i) / factorialks(i);
                }
                double f6_ij = 1.0 - exp(-R_ij * b_ij) * rbk.head(7).sum(); // sum indices 0 to 6
                double f8_ij = 1.0 - exp(-R_ij * b_ij) * rbk.head(9).sum(); // sum indices 0 to 8
                double val = (A_ij * exp(-alpha_ij * R_ij) 
                             -f6_ij * C6_ij / pow(R_ij, 6) 
                             -f8_ij * C8_ij / pow(R_ij, 8) 
                             +q_i * q_j / R_ij);
                return val;
            };
            std::function<double(double)> f(ff);
            integr.get_evaluator().add_potential(i, j, f);
        }
    }
    return integr;
}

auto potential_validdata()
{
    struct val {
        double r_A, theta1_deg, theta2_deg, phi_deg, V12BkB_K;
    };
    std::vector<val> vals = {
        {3.75,0.0,0.0,0.0,93332.293},
        {4.00,0.0,0.0,0.0,35408.788},
        {4.25,0.0,0.0,0.0,12935.239},
        {4.50,0.0,0.0,0.0,4470.748},
        {4.75,0.0,0.0,0.0,1410.824},
        {5.00,0.0,0.0,0.0,371.316},
        {5.25,0.0,0.0,0.0,54.606},
        {5.50,0.0,0.0,0.0,-20.478},
        {5.75,0.0,0.0,0.0,-24.133},
        {6.00,0.0,0.0,0.0,-12.275},
        {6.50,0.0,0.0,0.0,6.785},
        {7.00,0.0,0.0,0.0,13.341},
        {8.00,0.0,0.0,0.0,12.331},
        {10.00,0.0,0.0,0.0,5.466},
        {12.00,0.0,0.0,0.0,2.449},
        {3.50,0.0,22.5,0.0,127373.280},
        {3.75,0.0,22.5,0.0,51776.379},
        {4.00,0.0,22.5,0.0,20106.729},
        {4.25,0.0,22.5,0.0,7395.987},
        {4.50,0.0,22.5,0.0,2516.029},
        {4.75,0.0,22.5,0.0,743.778},
        {5.00,0.0,22.5,0.0,151.901},
        {5.25,0.0,22.5,0.0,-16.475},
        {5.50,0.0,22.5,0.0,-45.747},
        {5.75,0.0,22.5,0.0,-36.661},
        {6.00,0.0,22.5,0.0,-21.720},
        {6.50,0.0,22.5,0.0,-1.442},
        {7.00,0.0,22.5,0.0,6.344},
        {8.00,0.0,22.5,0.0,7.928},
        {10.00,0.0,22.5,0.0,3.836},
        {12.00,0.0,22.5,0.0,1.773},
        {3.00,0.0,45.0,0.0,150669.383},
        {3.25,0.0,45.0,0.0,70710.057},
        {3.50,0.0,45.0,0.0,30870.482},
        {3.75,0.0,45.0,0.0,12572.974},
        {4.00,0.0,45.0,0.0,4708.986},
        {4.25,0.0,45.0,0.0,1540.766},
        {4.50,0.0,45.0,0.0,360.895},
        {4.75,0.0,45.0,0.0,-26.753},
        {5.00,0.0,45.0,0.0,-121.582},
        {5.25,0.0,45.0,0.0,-120.338},
        {5.50,0.0,45.0,0.0,-95.073},
        {5.75,0.0,45.0,0.0,-69.286},
        {6.00,0.0,45.0,0.0,-48.883},
        {6.50,0.0,45.0,0.0,-23.723},
        {7.00,0.0,45.0,0.0,-11.558},
        {8.00,0.0,45.0,0.0,-2.772},
        {10.00,0.0,45.0,0.0,0.016},
        {12.00,0.0,45.0,0.0,0.189},
        {2.50,0.0,67.5,0.0,155899.804},
        {2.75,0.0,67.5,0.0,81264.403},
        {3.00,0.0,67.5,0.0,37579.769},
        {3.25,0.0,67.5,0.0,15718.209},
        {3.50,0.0,67.5,0.0,5832.528},
        {3.75,0.0,67.5,0.0,1739.952},
        {4.00,0.0,67.5,0.0,213.537},
        {4.25,0.0,67.5,0.0,-263.014},
        {4.50,0.0,67.5,0.0,-348.778},
        {4.75,0.0,67.5,0.0,-310.067},
        {5.00,0.0,67.5,0.0,-245.421},
        {5.25,0.0,67.5,0.0,-186.436},
        {5.50,0.0,67.5,0.0,-140.145},
        {5.75,0.0,67.5,0.0,-105.719},
        {6.00,0.0,67.5,0.0,-80.530},
        {6.50,0.0,67.5,0.0,-48.441},
        {7.00,0.0,67.5,0.0,-30.500},
        {8.00,0.0,67.5,0.0,-13.493},
        {10.00,0.0,67.5,0.0,-3.649},
        {12.00,0.0,67.5,0.0,-1.329},
        {2.50,0.0,90.0,0.0,85629.056},
        {2.75,0.0,90.0,0.0,42884.144},
        {3.00,0.0,90.0,0.0,18063.462},
        {3.25,0.0,90.0,0.0,6370.667},
        {3.50,0.0,90.0,0.0,1570.956},
        {3.75,0.0,90.0,0.0,-125.697},
        {4.00,0.0,90.0,0.0,-578.211},
        {4.25,0.0,90.0,0.0,-593.933},
        {4.50,0.0,90.0,0.0,-489.629},
        {4.75,0.0,90.0,0.0,-375.227},
        {5.00,0.0,90.0,0.0,-281.121},
        {5.25,0.0,90.0,0.0,-210.507},
        {5.50,0.0,90.0,0.0,-159.118},
        {5.75,0.0,90.0,0.0,-121.864},
        {6.00,0.0,90.0,0.0,-94.620},
        {6.50,0.0,90.0,0.0,-59.200},
        {7.00,0.0,90.0,0.0,-38.565},
        {8.00,0.0,90.0,0.0,-17.919},
        {10.00,0.0,90.0,0.0,-5.123},
        {12.00,0.0,90.0,0.0,-1.940},
        {3.25,22.5,22.5,0.0,95777.064},
        {3.50,22.5,22.5,0.0,44712.034},
        {3.75,22.5,22.5,0.0,19396.083},
        {4.00,22.5,22.5,0.0,7803.376},
        {4.25,22.5,22.5,0.0,2848.071},
        {4.50,22.5,22.5,0.0,875.394},
        {4.75,22.5,22.5,0.0,159.317},
        {5.00,22.5,22.5,0.0,-62.028},
        {5.25,22.5,22.5,0.0,-105.118},
        {5.50,22.5,22.5,0.0,-93.102},
        {5.75,22.5,22.5,0.0,-69.927},
        {6.00,22.5,22.5,0.0,-49.099},
        {6.50,22.5,22.5,0.0,-22.316},
        {7.00,22.5,22.5,0.0,-9.577},
        {8.00,22.5,22.5,0.0,-1.154},
        {10.00,22.5,22.5,0.0,0.649},
        {12.00,22.5,22.5,0.0,0.463},
        {3.25,22.5,22.5,45.0,110890.718},
        {3.50,22.5,22.5,45.0,51056.456},
        {3.75,22.5,22.5,45.0,21914.554},
        {4.00,22.5,22.5,45.0,8765.414},
        {4.25,22.5,22.5,45.0,3207.283},
        {4.50,22.5,22.5,45.0,1009.845},
        {4.75,22.5,22.5,45.0,212.433},
        {5.00,22.5,22.5,45.0,-37.873},
        {5.25,22.5,22.5,45.0,-91.466},
        {5.50,22.5,22.5,45.0,-83.646},
        {5.75,22.5,22.5,45.0,-62.537},
        {6.00,22.5,22.5,45.0,-43.019},
        {6.50,22.5,22.5,45.0,-18.022},
        {7.00,22.5,22.5,45.0,-6.501},
        {8.00,22.5,22.5,45.0,0.485},
        {10.00,22.5,22.5,45.0,1.200},
        {12.00,22.5,22.5,45.0,0.688},
        {3.50,22.5,22.5,90.0,71644.874},
        {3.75,22.5,22.5,90.0,29714.096},
        {4.00,22.5,22.5,90.0,11632.817},
        {4.25,22.5,22.5,90.0,4242.168},
        {4.50,22.5,22.5,90.0,1384.286},
        {4.75,22.5,22.5,90.0,354.913},
        {5.00,22.5,22.5,90.0,24.414},
        {5.25,22.5,22.5,90.0,-57.317},
        {5.50,22.5,22.5,90.0,-60.317},
        {5.75,22.5,22.5,90.0,-44.354},
        {6.00,22.5,22.5,90.0,-28.041},
        {6.50,22.5,22.5,90.0,-7.417},
        {7.00,22.5,22.5,90.0,1.107},
        {8.00,22.5,22.5,90.0,4.544},
        {10.00,22.5,22.5,90.0,2.566},
        {12.00,22.5,22.5,90.0,1.243},
        {3.50,22.5,22.5,135.0,103635.474},
        {3.75,22.5,22.5,135.0,40954.132},
        {4.00,22.5,22.5,135.0,15529.402},
        {4.25,22.5,22.5,135.0,5579.801},
        {4.50,22.5,22.5,135.0,1845.339},
        {4.75,22.5,22.5,135.0,521.234},
        {5.00,22.5,22.5,135.0,93.043},
        {5.25,22.5,22.5,135.0,-21.392},
        {5.50,22.5,22.5,135.0,-36.290},
        {5.75,22.5,22.5,135.0,-25.700},
        {6.00,22.5,22.5,135.0,-12.650},
        {6.50,22.5,22.5,135.0,3.523},
        {7.00,22.5,22.5,135.0,8.970},
        {8.00,22.5,22.5,135.0,8.747},
        {10.00,22.5,22.5,135.0,3.981},
        {12.00,22.5,22.5,135.0,1.819},
        {3.50,22.5,22.5,180.0,122006.913},
        {3.75,22.5,22.5,180.0,47033.785},
        {4.00,22.5,22.5,180.0,17544.926},
        {4.25,22.5,22.5,180.0,6246.701},
        {4.50,22.5,22.5,180.0,2067.375},
        {4.75,22.5,22.5,180.0,598.362},
        {5.00,22.5,22.5,180.0,123.562},
        {5.25,22.5,22.5,180.0,-5.966},
        {5.50,22.5,22.5,180.0,-26.139},
        {5.75,22.5,22.5,180.0,-17.841},
        {6.00,22.5,22.5,180.0,-6.157},
        {6.50,22.5,22.5,180.0,8.151},
        {7.00,22.5,22.5,180.0,12.302},
        {8.00,22.5,22.5,180.0,10.531},
        {10.00,22.5,22.5,180.0,4.583},
        {12.00,22.5,22.5,180.0,2.063},
        {2.50,22.5,45.0,0.0,150547.950},
        {2.75,22.5,45.0,0.0,85272.724},
        {3.00,22.5,45.0,0.0,44149.462},
        {3.25,22.5,45.0,0.0,21065.782},
        {3.50,22.5,45.0,0.0,9207.230},
        {3.75,22.5,45.0,0.0,3579.925},
        {4.00,22.5,45.0,0.0,1118.707},
        {4.25,22.5,45.0,0.0,146.538},
        {4.50,22.5,45.0,0.0,-177.165},
        {4.75,22.5,45.0,0.0,-243.357},
        {5.00,22.5,45.0,0.0,-221.064},
        {5.25,22.5,45.0,0.0,-177.369},
        {5.50,22.5,45.0,0.0,-135.678},
        {5.75,22.5,45.0,0.0,-102.137},
        {6.00,22.5,45.0,0.0,-76.833},
        {6.50,22.5,45.0,0.0,-44.541},
        {7.00,22.5,45.0,0.0,-27.024},
        {8.00,22.5,45.0,0.0,-11.359},
        {10.00,22.5,45.0,0.0,-2.957},
        {12.00,22.5,45.0,0.0,-1.036},
        {2.50,22.5,45.0,45.0,181799.233},
        {2.75,22.5,45.0,45.0,103262.396},
        {3.00,22.5,45.0,45.0,53546.287},
        {3.25,22.5,45.0,45.0,25587.213},
        {3.50,22.5,45.0,45.0,11249.120},
        {3.75,22.5,45.0,45.0,4461.995},
        {4.00,22.5,45.0,45.0,1491.468},
        {4.25,22.5,45.0,45.0,305.886},
        {4.50,22.5,45.0,45.0,-104.550},
        {4.75,22.5,45.0,45.0,-205.747},
        {5.00,22.5,45.0,45.0,-198.083},
        {5.25,22.5,45.0,45.0,-161.149},
        {5.50,22.5,45.0,45.0,-123.150},
        {5.75,22.5,45.0,45.0,-92.015},
        {6.00,22.5,45.0,45.0,-68.491},
        {6.50,22.5,45.0,45.0,-38.741},
        {7.00,22.5,45.0,45.0,-22.923},
        {8.00,22.5,45.0,45.0,-9.209},
        {10.00,22.5,45.0,45.0,-2.242},
        {12.00,22.5,45.0,45.0,-0.744},
        {3.00,22.5,45.0,90.0,90967.692},
        {3.25,22.5,45.0,90.0,42569.048},
        {3.50,22.5,45.0,90.0,18504.891},
        {3.75,22.5,45.0,90.0,7437.477},
        {4.00,22.5,45.0,90.0,2686.306},
        {4.25,22.5,45.0,90.0,790.046},
        {4.50,22.5,45.0,90.0,103.808},
        {4.75,22.5,45.0,90.0,-103.558},
        {5.00,22.5,45.0,90.0,-138.024},
        {5.25,22.5,45.0,90.0,-119.541},
        {5.50,22.5,45.0,90.0,-91.180},
        {5.75,22.5,45.0,90.0,-66.184},
        {6.00,22.5,45.0,90.0,-47.170},
        {6.50,22.5,45.0,90.0,-23.875},
        {7.00,22.5,45.0,90.0,-12.392},
        {8.00,22.5,45.0,90.0,-3.677},
        {10.00,22.5,45.0,90.0,-0.400},
        {12.00,22.5,45.0,90.0,0.008},
        {3.25,22.5,45.0,135.0,76582.868},
        {3.50,22.5,45.0,135.0,31657.806},
        {3.75,22.5,45.0,135.0,12388.036},
        {4.00,22.5,45.0,135.0,4523.748},
        {4.25,22.5,45.0,135.0,1477.751},
        {4.50,22.5,45.0,135.0,375.482},
        {4.75,22.5,45.0,135.0,18.704},
        {5.00,22.5,45.0,135.0,-70.733},
        {5.25,22.5,45.0,135.0,-74.420},
        {5.50,22.5,45.0,135.0,-56.836},
        {5.75,22.5,45.0,135.0,-38.436},
        {6.00,22.5,45.0,135.0,-24.215},
        {6.50,22.5,45.0,135.0,-7.806},
        {7.00,22.5,45.0,135.0,-0.979},
        {8.00,22.5,45.0,135.0,2.339},
        {10.00,22.5,45.0,135.0,1.606},
        {12.00,22.5,45.0,135.0,0.824},
        {3.25,22.5,45.0,180.0,100715.320},
        {3.50,22.5,45.0,180.0,40211.667},
        {3.75,22.5,45.0,180.0,15392.007},
        {4.00,22.5,45.0,180.0,5573.928},
        {4.25,22.5,45.0,180.0,1848.705},
        {4.50,22.5,45.0,180.0,513.184},
        {4.75,22.5,45.0,180.0,76.739},
        {5.00,22.5,45.0,180.0,-40.461},
        {5.25,22.5,45.0,180.0,-54.682},
        {5.50,22.5,45.0,180.0,-41.934},
        {5.75,22.5,45.0,180.0,-26.397},
        {6.00,22.5,45.0,180.0,-14.239},
        {6.50,22.5,45.0,180.0,-0.802},
        {7.00,22.5,45.0,180.0,4.005},
        {8.00,22.5,45.0,180.0,4.972},
        {10.00,22.5,45.0,180.0,2.484},
        {12.00,22.5,45.0,180.0,1.181},
        {2.50,22.5,67.5,0.0,61473.979},
        {2.75,22.5,67.5,0.0,30000.626},
        {3.00,22.5,67.5,0.0,12821.885},
        {3.25,22.5,67.5,0.0,4651.365},
        {3.50,22.5,67.5,0.0,1173.957},
        {3.75,22.5,67.5,0.0,-121.255},
        {4.00,22.5,67.5,0.0,-494.864},
        {4.25,22.5,67.5,0.0,-521.469},
        {4.50,22.5,67.5,0.0,-441.511},
        {4.75,22.5,67.5,0.0,-345.792},
        {5.00,22.5,67.5,0.0,-263.113},
        {5.25,22.5,67.5,0.0,-198.891},
        {5.50,22.5,67.5,0.0,-151.004},
        {5.75,22.5,67.5,0.0,-115.741},
        {6.00,22.5,67.5,0.0,-89.735},
        {6.50,22.5,67.5,0.0,-55.834},
        {7.00,22.5,67.5,0.0,-36.199},
        {8.00,22.5,67.5,0.0,-16.788},
        {10.00,22.5,67.5,0.0,-4.845},
        {12.00,22.5,67.5,0.0,-1.834},
        {2.50,22.5,67.5,45.0,68009.238},
        {2.75,22.5,67.5,45.0,33799.723},
        {3.00,22.5,67.5,45.0,14808.802},
        {3.25,22.5,67.5,45.0,5621.323},
        {3.50,22.5,67.5,45.0,1627.557},
        {3.75,22.5,67.5,45.0,87.445},
        {4.00,22.5,67.5,45.0,-397.039},
        {4.25,22.5,67.5,45.0,-472.560},
        {4.50,22.5,67.5,45.0,-414.209},
        {4.75,22.5,67.5,45.0,-328.433},
        {5.00,22.5,67.5,45.0,-250.771},
        {5.25,22.5,67.5,45.0,-189.444},
        {5.50,22.5,67.5,45.0,-143.472},
        {5.75,22.5,67.5,45.0,-109.609},
        {6.00,22.5,67.5,45.0,-84.687},
        {6.50,22.5,67.5,45.0,-52.355},
        {7.00,22.5,67.5,45.0,-33.758},
        {8.00,22.5,67.5,45.0,-15.524},
        {10.00,22.5,67.5,45.0,-4.427},
        {12.00,22.5,67.5,45.0,-1.662},
        {2.50,22.5,67.5,90.0,102550.056},
        {2.75,22.5,67.5,90.0,51257.903},
        {3.00,22.5,67.5,90.0,23083.746},
        {3.25,22.5,67.5,90.0,9355.704},
        {3.50,22.5,67.5,90.0,3259.263},
        {3.75,22.5,67.5,90.0,792.891},
        {4.00,22.5,67.5,90.0,-85.193},
        {4.25,22.5,67.5,90.0,-324.660},
        {4.50,22.5,67.5,90.0,-334.885},
        {4.75,22.5,67.5,90.0,-279.098},
        {5.00,22.5,67.5,90.0,-215.947},
        {5.25,22.5,67.5,90.0,-162.778},
        {5.50,22.5,67.5,90.0,-122.153},
        {5.75,22.5,67.5,90.0,-92.207},
        {6.00,22.5,67.5,90.0,-70.335},
        {6.50,22.5,67.5,90.0,-42.432},
        {7.00,22.5,67.5,90.0,-26.784},
        {8.00,22.5,67.5,90.0,-11.901},
        {10.00,22.5,67.5,90.0,-3.228},
        {12.00,22.5,67.5,90.0,-1.171},
        {2.75,22.5,67.5,135.0,92554.751},
        {3.00,22.5,67.5,135.0,40706.176},
        {3.25,22.5,67.5,135.0,16585.917},
        {3.50,22.5,67.5,135.0,6152.968},
        {3.75,22.5,67.5,135.0,1942.794},
        {4.00,22.5,67.5,135.0,381.985},
        {4.25,22.5,67.5,135.0,-120.769},
        {4.50,22.5,67.5,135.0,-233.027},
        {4.75,22.5,67.5,135.0,-218.539},
        {5.00,22.5,67.5,135.0,-173.989},
        {5.25,22.5,67.5,135.0,-130.761},
        {5.50,22.5,67.5,135.0,-96.505},
        {5.75,22.5,67.5,135.0,-71.208},
        {6.00,22.5,67.5,135.0,-52.971},
        {6.50,22.5,67.5,135.0,-30.380},
        {7.00,22.5,67.5,135.0,-18.291},
        {8.00,22.5,67.5,135.0,-7.475},
        {10.00,22.5,67.5,135.0,-1.765},
        {12.00,22.5,67.5,135.0,-0.575},
        {2.75,22.5,67.5,180.0,125734.384},
        {3.00,22.5,67.5,180.0,53627.313},
        {3.25,22.5,67.5,180.0,21493.118},
        {3.50,22.5,67.5,180.0,7988.937},
        {3.75,22.5,67.5,180.0,2628.120},
        {4.00,22.5,67.5,180.0,643.511},
        {4.25,22.5,67.5,180.0,-13.785},
        {4.50,22.5,67.5,180.0,-182.706},
        {4.75,22.5,67.5,180.0,-189.858},
        {5.00,22.5,67.5,180.0,-154.501},
        {5.25,22.5,67.5,180.0,-115.964},
        {5.50,22.5,67.5,180.0,-84.646},
        {5.75,22.5,67.5,180.0,-61.480},
        {6.00,22.5,67.5,180.0,-44.912},
        {6.50,22.5,67.5,180.0,-24.773},
        {7.00,22.5,67.5,180.0,-14.332},
        {8.00,22.5,67.5,180.0,-5.407},
        {10.00,22.5,67.5,180.0,-1.080},
        {12.00,22.5,67.5,180.0,-0.297},
        {2.50,22.5,90.0,0.0,83088.200},
        {2.75,22.5,90.0,0.0,36347.988},
        {3.00,22.5,90.0,0.0,14154.288},
        {3.25,22.5,90.0,0.0,4654.866},
        {3.50,22.5,90.0,0.0,986.466},
        {3.75,22.5,90.0,0.0,-237.818},
        {4.00,22.5,90.0,0.0,-529.075},
        {4.25,22.5,90.0,0.0,-508.372},
        {4.50,22.5,90.0,0.0,-409.721},
        {4.75,22.5,90.0,0.0,-310.948},
        {5.00,22.5,90.0,0.0,-231.844},
        {5.25,22.5,90.0,0.0,-173.090},
        {5.50,22.5,90.0,0.0,-130.509},
        {5.75,22.5,90.0,0.0,-99.704},
        {6.00,22.5,90.0,0.0,-77.212},
        {6.50,22.5,90.0,0.0,-48.054},
        {7.00,22.5,90.0,0.0,-31.154},
        {8.00,22.5,90.0,0.0,-14.364},
        {10.00,22.5,90.0,0.0,-4.057},
        {12.00,22.5,90.0,0.0,-1.522},
        {2.50,22.5,90.0,45.0,69203.065},
        {2.75,22.5,90.0,45.0,31195.851},
        {3.00,22.5,90.0,45.0,12281.165},
        {3.25,22.5,90.0,45.0,3984.724},
        {3.50,22.5,90.0,45.0,748.563},
        {3.75,22.5,90.0,45.0,-323.325},
        {4.00,22.5,90.0,45.0,-561.657},
        {4.25,22.5,90.0,45.0,-522.639},
        {4.50,22.5,90.0,45.0,-417.465},
        {4.75,22.5,90.0,45.0,-316.122},
        {5.00,22.5,90.0,45.0,-235.780},
        {5.25,22.5,90.0,45.0,-176.264},
        {5.50,22.5,90.0,45.0,-133.124},
        {5.75,22.5,90.0,45.0,-101.873},
        {6.00,22.5,90.0,45.0,-79.018},
        {6.50,22.5,90.0,45.0,-49.314},
        {7.00,22.5,90.0,45.0,-32.045},
        {8.00,22.5,90.0,45.0,-14.828},
        {10.00,22.5,90.0,45.0,-4.210},
        {12.00,22.5,90.0,45.0,-1.583},
        {2.50,22.5,90.0,90.0,57323.379},
        {2.75,22.5,90.0,90.0,26642.466},
        {3.00,22.5,90.0,90.0,10582.507},
        {3.25,22.5,90.0,90.0,3364.472},
        {3.50,22.5,90.0,90.0,524.645},
        {3.75,22.5,90.0,90.0,-405.018},
        {4.00,22.5,90.0,90.0,-593.244},
        {4.25,22.5,90.0,90.0,-536.667},
        {4.50,22.5,90.0,90.0,-425.163},
        {4.75,22.5,90.0,90.0,-321.295},
        {5.00,22.5,90.0,90.0,-239.721},
        {5.25,22.5,90.0,90.0,-179.442},
        {5.50,22.5,90.0,90.0,-135.742},
        {5.75,22.5,90.0,90.0,-104.045},
        {6.00,22.5,90.0,90.0,-80.826},
        {6.50,22.5,90.0,90.0,-50.575},
        {7.00,22.5,90.0,90.0,-32.935},
        {8.00,22.5,90.0,90.0,-15.293},
        {10.00,22.5,90.0,90.0,-4.362},
        {12.00,22.5,90.0,90.0,-1.644},
        {2.00,45.0,45.0,0.0,124718.637},
        {2.25,45.0,45.0,0.0,75216.014},
        {2.50,45.0,45.0,0.0,40684.499},
        {2.75,45.0,45.0,0.0,20034.191},
        {3.00,45.0,45.0,0.0,8913.519},
        {3.25,45.0,45.0,0.0,3413.139},
        {3.50,45.0,45.0,0.0,919.905},
        {3.75,45.0,45.0,0.0,-85.461},
        {4.00,45.0,45.0,0.0,-410.206},
        {4.25,45.0,45.0,0.0,-452.909},
        {4.50,45.0,45.0,0.0,-396.576},
        {4.75,45.0,45.0,0.0,-318.174},
        {5.00,45.0,45.0,0.0,-245.982},
        {5.25,45.0,45.0,0.0,-187.642},
        {5.50,45.0,45.0,0.0,-143.013},
        {5.75,45.0,45.0,0.0,-109.636},
        {6.00,45.0,45.0,0.0,-84.825},
        {6.50,45.0,45.0,0.0,-52.435},
        {7.00,45.0,45.0,0.0,-33.809},
        {8.00,45.0,45.0,0.0,-15.650},
        {10.00,45.0,45.0,0.0,-4.566},
        {12.00,45.0,45.0,0.0,-1.727},
        {2.00,45.0,45.0,30.0,134304.988},
        {2.25,45.0,45.0,30.0,82443.222},
        {2.50,45.0,45.0,30.0,45244.497},
        {2.75,45.0,45.0,30.0,22637.973},
        {3.00,45.0,45.0,30.0,10296.824},
        {3.25,45.0,45.0,30.0,4109.144},
        {3.50,45.0,45.0,30.0,1257.637},
        {3.75,45.0,45.0,30.0,76.363},
        {4.00,45.0,45.0,30.0,-331.063},
        {4.25,45.0,45.0,30.0,-411.683},
        {4.50,45.0,45.0,30.0,-372.776},
        {4.75,45.0,45.0,30.0,-302.719},
        {5.00,45.0,45.0,30.0,-234.892},
        {5.25,45.0,45.0,30.0,-179.136},
        {5.50,45.0,45.0,30.0,-136.237},
        {5.75,45.0,45.0,30.0,-104.130},
        {6.00,45.0,45.0,30.0,-80.303},
        {6.50,45.0,45.0,30.0,-49.328},
        {7.00,45.0,45.0,30.0,-31.635},
        {8.00,45.0,45.0,30.0,-14.526},
        {10.00,45.0,45.0,30.0,-4.195},
        {12.00,45.0,45.0,30.0,-1.575},
        {2.00,45.0,45.0,60.0,178182.278},
        {2.25,45.0,45.0,60.0,111820.102},
        {2.50,45.0,45.0,60.0,62901.626},
        {2.75,45.0,45.0,60.0,32407.106},
        {3.00,45.0,45.0,60.0,15342.681},
        {3.25,45.0,45.0,60.0,6577.322},
        {3.50,45.0,45.0,60.0,2420.920},
        {3.75,45.0,45.0,60.0,617.046},
        {4.00,45.0,45.0,60.0,-74.820},
        {4.25,45.0,45.0,60.0,-282.205},
        {4.50,45.0,45.0,60.0,-299.880},
        {4.75,45.0,45.0,60.0,-256.139},
        {5.00,45.0,45.0,60.0,-201.725},
        {5.25,45.0,45.0,60.0,-153.764},
        {5.50,45.0,45.0,60.0,-116.036},
        {5.75,45.0,45.0,60.0,-87.710},
        {6.00,45.0,45.0,60.0,-66.811},
        {6.50,45.0,45.0,60.0,-40.051},
        {7.00,45.0,45.0,60.0,-25.139},
        {8.00,45.0,45.0,60.0,-11.165},
        {10.00,45.0,45.0,60.0,-3.083},
        {12.00,45.0,45.0,60.0,-1.118},
        {2.25,45.0,45.0,90.0,192259.486},
        {2.50,45.0,45.0,90.0,109371.183},
        {2.75,45.0,45.0,90.0,56930.354},
        {3.00,45.0,45.0,90.0,27346.138},
        {3.25,45.0,45.0,90.0,12123.664},
        {3.50,45.0,45.0,90.0,4885.855},
        {3.75,45.0,45.0,90.0,1695.005},
        {4.00,45.0,45.0,90.0,404.535},
        {4.25,45.0,45.0,90.0,-54.937},
        {4.50,45.0,45.0,90.0,-178.788},
        {4.75,45.0,45.0,90.0,-181.581},
        {5.00,45.0,45.0,90.0,-149.602},
        {5.25,45.0,45.0,90.0,-114.147},
        {5.50,45.0,45.0,90.0,-84.530},
        {5.75,45.0,45.0,90.0,-62.088},
        {6.00,45.0,45.0,90.0,-45.738},
        {6.50,45.0,45.0,90.0,-25.535},
        {7.00,45.0,45.0,90.0,-14.958},
        {8.00,45.0,45.0,90.0,-5.884},
        {10.00,45.0,45.0,90.0,-1.336},
        {12.00,45.0,45.0,90.0,-0.404},
        {2.75,45.0,45.0,120.0,114737.549},
        {3.00,45.0,45.0,120.0,52986.396},
        {3.25,45.0,45.0,120.0,22917.506},
        {3.50,45.0,45.0,120.0,9280.534},
        {3.75,45.0,45.0,120.0,3459.526},
        {4.00,45.0,45.0,120.0,1123.515},
        {4.25,45.0,45.0,120.0,256.638},
        {4.50,45.0,45.0,120.0,-25.957},
        {4.75,45.0,45.0,120.0,-92.899},
        {5.00,45.0,45.0,120.0,-89.465},
        {5.25,45.0,45.0,120.0,-68.929},
        {5.50,45.0,45.0,120.0,-48.643},
        {5.75,45.0,45.0,120.0,-32.881},
        {6.00,45.0,45.0,120.0,-21.684},
        {6.50,45.0,45.0,120.0,-8.925},
        {7.00,45.0,45.0,120.0,-3.283},
        {8.00,45.0,45.0,120.0,0.192},
        {10.00,45.0,45.0,120.0,0.676},
        {12.00,45.0,45.0,120.0,0.417},
        {3.00,45.0,45.0,150.0,94070.058},
        {3.25,45.0,45.0,150.0,38298.319},
        {3.50,45.0,45.0,150.0,14956.263},
        {3.75,45.0,45.0,150.0,5546.093},
        {4.00,45.0,45.0,150.0,1903.495},
        {4.25,45.0,45.0,150.0,565.733},
        {4.50,45.0,45.0,150.0,112.975},
        {4.75,45.0,45.0,150.0,-17.533},
        {5.00,45.0,45.0,150.0,-40.173},
        {5.25,45.0,45.0,150.0,-32.343},
        {5.50,45.0,45.0,150.0,-19.678},
        {5.75,45.0,45.0,150.0,-9.290},
        {6.00,45.0,45.0,150.0,-2.230},
        {6.50,45.0,45.0,150.0,4.542},
        {7.00,45.0,45.0,150.0,6.201},
        {8.00,45.0,45.0,150.0,5.141},
        {10.00,45.0,45.0,150.0,2.317},
        {12.00,45.0,45.0,150.0,1.085},
        {3.00,45.0,45.0,180.0,119163.986},
        {3.25,45.0,45.0,180.0,46901.020},
        {3.50,45.0,45.0,180.0,17921.977},
        {3.75,45.0,45.0,180.0,6575.740},
        {4.00,45.0,45.0,180.0,2268.309},
        {4.25,45.0,45.0,180.0,702.534},
        {4.50,45.0,45.0,180.0,171.107},
        {4.75,45.0,45.0,180.0,12.585},
        {5.00,45.0,45.0,180.0,-20.973},
        {5.25,45.0,45.0,180.0,-18.223},
        {5.50,45.0,45.0,180.0,-8.519},
        {5.75,45.0,45.0,180.0,-0.198},
        {6.00,45.0,45.0,180.0,5.275},
        {6.50,45.0,45.0,180.0,9.744},
        {7.00,45.0,45.0,180.0,9.868},
        {8.00,45.0,45.0,180.0,7.059},
        {10.00,45.0,45.0,180.0,2.953},
        {12.00,45.0,45.0,180.0,1.344},
        {2.00,45.0,67.5,0.0,96172.136},
        {2.25,45.0,67.5,0.0,44394.362},
        {2.50,45.0,67.5,0.0,18861.200},
        {2.75,45.0,67.5,0.0,7007.776},
        {3.00,45.0,67.5,0.0,1931.072},
        {3.25,45.0,67.5,0.0,-9.374},
        {3.50,45.0,67.5,0.0,-606.422},
        {3.75,45.0,67.5,0.0,-683.000},
        {4.00,45.0,67.5,0.0,-590.147},
        {4.25,45.0,67.5,0.0,-464.646},
        {4.50,45.0,67.5,0.0,-352.465},
        {4.75,45.0,67.5,0.0,-264.143},
        {5.00,45.0,67.5,0.0,-198.081},
        {5.25,45.0,67.5,0.0,-149.624},
        {5.50,45.0,67.5,0.0,-114.206},
        {5.75,45.0,67.5,0.0,-88.189},
        {6.00,45.0,67.5,0.0,-68.896},
        {6.50,45.0,67.5,0.0,-43.439},
        {7.00,45.0,67.5,0.0,-28.448},
        {8.00,45.0,67.5,0.0,-13.380},
        {10.00,45.0,67.5,0.0,-3.925},
        {12.00,45.0,67.5,0.0,-1.499},
        {2.00,45.0,67.5,30.0,87948.780},
        {2.25,45.0,67.5,30.0,42625.056},
        {2.50,45.0,67.5,30.0,18793.471},
        {2.75,45.0,67.5,30.0,7247.413},
        {3.00,45.0,67.5,30.0,2136.902},
        {3.25,45.0,67.5,30.0,118.425},
        {3.50,45.0,67.5,30.0,-535.722},
        {3.75,45.0,67.5,30.0,-645.338},
        {4.00,45.0,67.5,30.0,-569.755},
        {4.25,45.0,67.5,30.0,-452.891},
        {4.50,45.0,67.5,30.0,-345.032},
        {4.75,45.0,67.5,30.0,-258.973},
        {5.00,45.0,67.5,30.0,-194.206},
        {5.25,45.0,67.5,30.0,-146.578},
        {5.50,45.0,67.5,30.0,-111.748},
        {5.75,45.0,67.5,30.0,-86.178},
        {6.00,45.0,67.5,30.0,-67.238},
        {6.50,45.0,67.5,30.0,-42.298},
        {7.00,45.0,67.5,30.0,-27.653},
        {8.00,45.0,67.5,30.0,-12.974},
        {10.00,45.0,67.5,30.0,-3.791},
        {12.00,45.0,67.5,30.0,-1.442},
        {2.00,45.0,67.5,60.0,84990.638},
        {2.25,45.0,67.5,60.0,45411.323},
        {2.50,45.0,67.5,60.0,21685.456},
        {2.75,45.0,67.5,60.0,9168.829},
        {3.00,45.0,67.5,60.0,3225.720},
        {3.25,45.0,67.5,60.0,688.641},
        {3.50,45.0,67.5,60.0,-247.345},
        {3.75,45.0,67.5,60.0,-498.983},
        {4.00,45.0,67.5,60.0,-492.088},
        {4.25,45.0,67.5,60.0,-408.103},
        {4.50,45.0,67.5,60.0,-316.391},
        {4.75,45.0,67.5,60.0,-238.820},
        {5.00,45.0,67.5,60.0,-179.004},
        {5.25,45.0,67.5,60.0,-134.612},
        {5.50,45.0,67.5,60.0,-102.103},
        {5.75,45.0,67.5,60.0,-78.305},
        {6.00,45.0,67.5,60.0,-60.764},
        {6.50,45.0,67.5,60.0,-37.858},
        {7.00,45.0,67.5,60.0,-24.558},
        {8.00,45.0,67.5,60.0,-11.388},
        {10.00,45.0,67.5,60.0,-3.269},
        {12.00,45.0,67.5,60.0,-1.226},
        {2.00,45.0,67.5,90.0,123974.153},
        {2.25,45.0,67.5,90.0,68836.613},
        {2.50,45.0,67.5,90.0,34443.993},
        {2.75,45.0,67.5,90.0,15645.971},
        {3.00,45.0,67.5,90.0,6353.522},
        {3.25,45.0,67.5,90.0,2153.588},
        {3.50,45.0,67.5,90.0,433.915},
        {3.75,45.0,67.5,90.0,-174.248},
        {4.00,45.0,67.5,90.0,-326.852},
        {4.25,45.0,67.5,90.0,-314.838},
        {4.50,45.0,67.5,90.0,-257.092},
        {4.75,45.0,67.5,90.0,-197.036},
        {5.00,45.0,67.5,90.0,-147.419},
        {5.25,45.0,67.5,90.0,-109.738},
        {5.50,45.0,67.5,90.0,-82.075},
        {5.75,45.0,67.5,90.0,-61.981},
        {6.00,45.0,67.5,90.0,-47.361},
        {6.50,45.0,67.5,90.0,-28.681},
        {7.00,45.0,67.5,90.0,-18.159},
        {8.00,45.0,67.5,90.0,-8.098},
        {10.00,45.0,67.5,90.0,-2.184},
        {12.00,45.0,67.5,90.0,-0.780},
        {2.25,45.0,67.5,120.0,138874.169},
        {2.50,45.0,67.5,120.0,68213.187},
        {2.75,45.0,67.5,120.0,31004.235},
        {3.00,45.0,67.5,120.0,13061.211},
        {3.25,45.0,67.5,120.0,5016.482},
        {3.50,45.0,67.5,120.0,1654.193},
        {3.75,45.0,67.5,120.0,362.015},
        {4.00,45.0,67.5,120.0,-72.742},
        {4.25,45.0,67.5,120.0,-178.857},
        {4.50,45.0,67.5,120.0,-173.273},
        {4.75,45.0,67.5,120.0,-138.754},
        {5.00,45.0,67.5,120.0,-103.545},
        {5.25,45.0,67.5,120.0,-75.218},
        {5.50,45.0,67.5,120.0,-54.287},
        {5.75,45.0,67.5,120.0,-39.336},
        {6.00,45.0,67.5,120.0,-28.768},
        {6.50,45.0,67.5,120.0,-15.945},
        {7.00,45.0,67.5,120.0,-9.268},
        {8.00,45.0,67.5,120.0,-3.511},
        {10.00,45.0,67.5,120.0,-0.671},
        {12.00,45.0,67.5,120.0,-0.162},
        {2.50,45.0,67.5,150.0,133451.309},
        {2.75,45.0,67.5,150.0,57077.355},
        {3.00,45.0,67.5,150.0,23244.076},
        {3.25,45.0,67.5,150.0,8951.704},
        {3.50,45.0,67.5,150.0,3183.663},
        {3.75,45.0,67.5,150.0,976.737},
        {4.00,45.0,67.5,150.0,194.754},
        {4.25,45.0,67.5,150.0,-45.617},
        {4.50,45.0,67.5,150.0,-94.925},
        {4.75,45.0,67.5,150.0,-85.500},
        {5.00,45.0,67.5,150.0,-63.774},
        {5.25,45.0,67.5,150.0,-43.983},
        {5.50,45.0,67.5,150.0,-29.140},
        {5.75,45.0,67.5,150.0,-18.832},
        {6.00,45.0,67.5,150.0,-11.924},
        {6.50,45.0,67.5,150.0,-4.391},
        {7.00,45.0,67.5,150.0,-1.192},
        {8.00,45.0,67.5,150.0,0.667},
        {10.00,45.0,67.5,150.0,0.709},
        {12.00,45.0,67.5,150.0,0.401},
        {2.75,45.0,67.5,180.0,73751.627},
        {3.00,45.0,67.5,180.0,29214.781},
        {3.25,45.0,67.5,180.0,11100.680},
        {3.50,45.0,67.5,180.0,3968.074},
        {3.75,45.0,67.5,180.0,1273.700},
        {4.00,45.0,67.5,180.0,316.604},
        {4.25,45.0,67.5,180.0,11.969},
        {4.50,45.0,67.5,180.0,-62.287},
        {4.75,45.0,67.5,180.0,-63.724},
        {5.00,45.0,67.5,180.0,-47.618},
        {5.25,45.0,67.5,180.0,-31.314},
        {5.50,45.0,67.5,180.0,-18.940},
        {5.75,45.0,67.5,180.0,-10.512},
        {6.00,45.0,67.5,180.0,-5.084},
        {6.50,45.0,67.5,180.0,0.304},
        {7.00,45.0,67.5,180.0,2.094},
        {8.00,45.0,67.5,180.0,2.369},
        {10.00,45.0,67.5,180.0,1.271},
        {12.00,45.0,67.5,180.0,0.630},
        {2.25,45.0,90.0,0.0,106873.390},
        {2.50,45.0,90.0,0.0,43903.427},
        {2.75,45.0,90.0,0.0,16918.607},
        {3.00,45.0,90.0,0.0,5887.530},
        {3.25,45.0,90.0,0.0,1645.344},
        {3.50,45.0,90.0,0.0,159.740},
        {3.75,45.0,90.0,0.0,-270.866},
        {4.00,45.0,90.0,0.0,-331.884},
        {4.25,45.0,90.0,0.0,-283.901},
        {4.50,45.0,90.0,0.0,-217.889},
        {4.75,45.0,90.0,0.0,-160.847},
        {5.00,45.0,90.0,0.0,-117.572},
        {5.25,45.0,90.0,0.0,-86.282},
        {5.50,45.0,90.0,0.0,-63.988},
        {5.75,45.0,90.0,0.0,-48.083},
        {6.00,45.0,90.0,0.0,-36.627},
        {6.50,45.0,90.0,0.0,-22.071},
        {7.00,45.0,90.0,0.0,-13.877},
        {8.00,45.0,90.0,0.0,-6.035},
        {10.00,45.0,90.0,0.0,-1.529},
        {12.00,45.0,90.0,0.0,-0.529},
        {2.00,45.0,90.0,30.0,187451.467},
        {2.25,45.0,90.0,30.0,84837.069},
        {2.50,45.0,90.0,30.0,35922.527},
        {2.75,45.0,90.0,30.0,14030.432},
        {3.00,45.0,90.0,30.0,4837.501},
        {3.25,45.0,90.0,30.0,1256.901},
        {3.50,45.0,90.0,30.0,9.487},
        {3.75,45.0,90.0,30.0,-334.572},
        {4.00,45.0,90.0,30.0,-363.186},
        {4.25,45.0,90.0,30.0,-302.188},
        {4.50,45.0,90.0,30.0,-230.242},
        {4.75,45.0,90.0,30.0,-169.990},
        {5.00,45.0,90.0,30.0,-124.675},
        {5.25,45.0,90.0,30.0,-91.935},
        {5.50,45.0,90.0,30.0,-68.547},
        {5.75,45.0,90.0,30.0,-51.790},
        {6.00,45.0,90.0,30.0,-39.660},
        {6.50,45.0,90.0,30.0,-24.139},
        {7.00,45.0,90.0,30.0,-15.317},
        {8.00,45.0,90.0,30.0,-6.779},
        {10.00,45.0,90.0,30.0,-1.775},
        {12.00,45.0,90.0,30.0,-0.628},
        {2.00,45.0,90.0,60.0,106402.517},
        {2.25,45.0,90.0,60.0,52546.629},
        {2.50,45.0,90.0,60.0,23401.645},
        {2.75,45.0,90.0,60.0,9254.988},
        {3.00,45.0,90.0,60.0,3026.585},
        {3.25,45.0,90.0,60.0,562.499},
        {3.50,45.0,90.0,60.0,-268.004},
        {3.75,45.0,90.0,60.0,-455.812},
        {4.00,45.0,90.0,60.0,-424.259},
        {4.25,45.0,90.0,60.0,-338.454},
        {4.50,45.0,90.0,60.0,-254.929},
        {4.75,45.0,90.0,60.0,-188.312},
        {5.00,45.0,90.0,60.0,-138.916},
        {5.25,45.0,90.0,60.0,-103.267},
        {5.50,45.0,90.0,60.0,-77.681},
        {5.75,45.0,90.0,60.0,-59.214},
        {6.00,45.0,90.0,60.0,-45.734},
        {6.50,45.0,90.0,60.0,-28.276},
        {7.00,45.0,90.0,60.0,-18.198},
        {8.00,45.0,90.0,60.0,-8.267},
        {10.00,45.0,90.0,60.0,-2.266},
        {12.00,45.0,90.0,60.0,-0.827},
        {2.00,45.0,90.0,90.0,78126.719},
        {2.25,45.0,90.0,90.0,40484.035},
        {2.50,45.0,90.0,90.0,18445.562},
        {2.75,45.0,90.0,90.0,7271.739},
        {3.00,45.0,90.0,90.0,2243.504},
        {3.25,45.0,90.0,90.0,251.414},
        {3.50,45.0,90.0,90.0,-396.415},
        {3.75,45.0,90.0,90.0,-513.611},
        {4.00,45.0,90.0,90.0,-454.091},
        {4.25,45.0,90.0,90.0,-356.446},
        {4.50,45.0,90.0,90.0,-267.267},
        {4.75,45.0,90.0,90.0,-197.491},
        {5.00,45.0,90.0,90.0,-146.053},
        {5.25,45.0,90.0,90.0,-108.946},
        {5.50,45.0,90.0,90.0,-82.256},
        {5.75,45.0,90.0,90.0,-62.931},
        {6.00,45.0,90.0,90.0,-48.775},
        {6.50,45.0,90.0,90.0,-30.346},
        {7.00,45.0,90.0,90.0,-19.639},
        {8.00,45.0,90.0,90.0,-9.012},
        {10.00,45.0,90.0,90.0,-2.512},
        {12.00,45.0,90.0,90.0,-0.927},
        {1.75,67.5,67.5,0.0,113751.504},
        {2.00,67.5,67.5,0.0,48068.061},
        {2.25,67.5,67.5,0.0,18978.612},
        {2.50,67.5,67.5,0.0,6659.553},
        {2.75,67.5,67.5,0.0,1772.294},
        {3.00,67.5,67.5,0.0,27.808},
        {3.25,67.5,67.5,0.0,-469.916},
        {3.50,67.5,67.5,0.0,-519.127},
        {3.75,67.5,67.5,0.0,-435.421},
        {4.00,67.5,67.5,0.0,-332.557},
        {4.25,67.5,67.5,0.0,-244.959},
        {4.50,67.5,67.5,0.0,-178.504},
        {4.75,67.5,67.5,0.0,-130.342},
        {5.00,67.5,67.5,0.0,-95.993},
        {5.25,67.5,67.5,0.0,-71.522},
        {5.50,67.5,67.5,0.0,-53.968},
        {5.75,67.5,67.5,0.0,-41.238},
        {6.00,67.5,67.5,0.0,-31.888},
        {6.50,67.5,67.5,0.0,-19.685},
        {7.00,67.5,67.5,0.0,-12.601},
        {8.00,67.5,67.5,0.0,-5.641},
        {10.00,67.5,67.5,0.0,-1.515},
        {12.00,67.5,67.5,0.0,-0.549},
        {1.75,67.5,67.5,22.5,103320.904},
        {2.00,67.5,67.5,22.5,44475.812},
        {2.25,67.5,67.5,22.5,17780.543},
        {2.50,67.5,67.5,22.5,6272.568},
        {2.75,67.5,67.5,22.5,1649.242},
        {3.00,67.5,67.5,22.5,-13.361},
        {3.25,67.5,67.5,22.5,-486.803},
        {3.50,67.5,67.5,22.5,-528.766},
        {3.75,67.5,67.5,22.5,-442.431},
        {4.00,67.5,67.5,22.5,-338.101},
        {4.25,67.5,67.5,22.5,-249.376},
        {4.50,67.5,67.5,22.5,-181.986},
        {4.75,67.5,67.5,22.5,-133.064},
        {5.00,67.5,67.5,22.5,-98.114},
        {5.25,67.5,67.5,22.5,-73.178},
        {5.50,67.5,67.5,22.5,-55.269},
        {5.75,67.5,67.5,22.5,-42.269},
        {6.00,67.5,67.5,22.5,-32.714},
        {6.50,67.5,67.5,22.5,-20.232},
        {7.00,67.5,67.5,22.5,-12.978},
        {8.00,67.5,67.5,22.5,-5.838},
        {10.00,67.5,67.5,22.5,-1.581},
        {12.00,67.5,67.5,22.5,-0.575},
        {1.75,67.5,67.5,45.0,83755.531},
        {2.00,67.5,67.5,45.0,37939.492},
        {2.25,67.5,67.5,45.0,15760.732},
        {2.50,67.5,67.5,45.0,5714.026},
        {2.75,67.5,67.5,45.0,1520.027},
        {3.00,67.5,67.5,45.0,-35.416},
        {3.25,67.5,67.5,45.0,-490.589},
        {3.50,67.5,67.5,45.0,-533.336},
        {3.75,67.5,67.5,45.0,-449.109},
        {4.00,67.5,67.5,45.0,-345.299},
        {4.25,67.5,67.5,45.0,-255.930},
        {4.50,67.5,67.5,45.0,-187.444},
        {4.75,67.5,67.5,45.0,-137.401},
        {5.00,67.5,67.5,45.0,-101.485},
        {5.25,67.5,67.5,45.0,-75.782},
        {5.50,67.5,67.5,45.0,-57.286},
        {5.75,67.5,67.5,45.0,-43.846},
        {6.00,67.5,67.5,45.0,-33.961},
        {6.50,67.5,67.5,45.0,-21.045},
        {7.00,67.5,67.5,45.0,-13.537},
        {8.00,67.5,67.5,45.0,-6.132},
        {10.00,67.5,67.5,45.0,-1.682},
        {12.00,67.5,67.5,45.0,-0.615},
        {1.75,67.5,67.5,67.5,74876.024},
        {2.00,67.5,67.5,67.5,36401.510},
        {2.25,67.5,67.5,67.5,16117.671},
        {2.50,67.5,67.5,67.5,6287.741},
        {2.75,67.5,67.5,67.5,1928.670},
        {3.00,67.5,67.5,67.5,198.675},
        {3.25,67.5,67.5,67.5,-370.167},
        {3.50,67.5,67.5,67.5,-475.026},
        {3.75,67.5,67.5,67.5,-421.557},
        {4.00,67.5,67.5,67.5,-332.010},
        {4.25,67.5,67.5,67.5,-248.972},
        {4.50,67.5,67.5,67.5,-183.249},
        {4.75,67.5,67.5,67.5,-134.451},
        {5.00,67.5,67.5,67.5,-99.166},
        {5.25,67.5,67.5,67.5,-73.850},
        {5.50,67.5,67.5,67.5,-55.645},
        {5.75,67.5,67.5,67.5,-42.448},
        {6.00,67.5,67.5,67.5,-32.775},
        {6.50,67.5,67.5,67.5,-20.204},
        {7.00,67.5,67.5,67.5,-12.949},
        {8.00,67.5,67.5,67.5,-5.840},
        {10.00,67.5,67.5,67.5,-1.590},
        {12.00,67.5,67.5,67.5,-0.575},
        {1.75,67.5,67.5,90.0,90758.662},
        {2.00,67.5,67.5,90.0,46598.898},
        {2.25,67.5,67.5,90.0,21922.972},
        {2.50,67.5,67.5,90.0,9347.125},
        {2.75,67.5,67.5,90.0,3460.883},
        {3.00,67.5,67.5,90.0,943.909},
        {3.25,67.5,67.5,90.0,-9.822},
        {3.50,67.5,67.5,90.0,-296.662},
        {3.75,67.5,67.5,90.0,-327.954},
        {4.00,67.5,67.5,90.0,-278.227},
        {4.25,67.5,67.5,90.0,-214.665},
        {4.50,67.5,67.5,90.0,-159.227},
        {4.75,67.5,67.5,90.0,-116.464},
        {5.00,67.5,67.5,90.0,-85.126},
        {5.25,67.5,67.5,90.0,-62.630},
        {5.50,67.5,67.5,90.0,-46.559},
        {5.75,67.5,67.5,90.0,-35.031},
        {6.00,67.5,67.5,90.0,-26.688},
        {6.50,67.5,67.5,90.0,-16.051},
        {7.00,67.5,67.5,90.0,-10.065},
        {8.00,67.5,67.5,90.0,-4.368},
        {10.00,67.5,67.5,90.0,-1.107},
        {12.00,67.5,67.5,90.0,-0.376},
        {1.75,67.5,67.5,112.5,146551.435},
        {2.00,67.5,67.5,112.5,76195.399},
        {2.25,67.5,67.5,112.5,36632.088},
        {2.50,67.5,67.5,112.5,16317.937},
        {2.75,67.5,67.5,112.5,6664.773},
        {3.00,67.5,67.5,112.5,2399.109},
        {3.25,67.5,67.5,112.5,659.283},
        {3.50,67.5,67.5,112.5,24.908},
        {3.75,67.5,67.5,112.5,-160.426},
        {4.00,67.5,67.5,112.5,-181.007},
        {4.25,67.5,67.5,112.5,-151.655},
        {4.50,67.5,67.5,112.5,-114.589},
        {4.75,67.5,67.5,112.5,-82.899},
        {5.00,67.5,67.5,112.5,-58.970},
        {5.25,67.5,67.5,112.5,-41.823},
        {5.50,67.5,67.5,112.5,-29.799},
        {5.75,67.5,67.5,112.5,-21.418},
        {6.00,67.5,67.5,112.5,-15.559},
        {6.50,67.5,67.5,112.5,-8.489},
        {7.00,67.5,67.5,112.5,-4.817},
        {8.00,67.5,67.5,112.5,-1.676},
        {10.00,67.5,67.5,112.5,-0.217},
        {12.00,67.5,67.5,112.5,-0.011},
        {2.00,67.5,67.5,135.0,139084.073},
        {2.25,67.5,67.5,135.0,64959.542},
        {2.50,67.5,67.5,135.0,28566.748},
        {2.75,67.5,67.5,135.0,11842.878},
        {3.00,67.5,67.5,135.0,4579.322},
        {3.25,67.5,67.5,135.0,1595.984},
        {3.50,67.5,67.5,135.0,449.744},
        {3.75,67.5,67.5,135.0,51.372},
        {4.00,67.5,67.5,135.0,-61.392},
        {4.25,67.5,67.5,135.0,-75.116},
        {4.50,67.5,67.5,135.0,-60.615},
        {4.75,67.5,67.5,135.0,-42.384},
        {5.00,67.5,67.5,135.0,-27.438},
        {5.25,67.5,67.5,135.0,-16.773},
        {5.50,67.5,67.5,135.0,-9.651},
        {5.75,67.5,67.5,135.0,-5.073},
        {6.00,67.5,67.5,135.0,-2.209},
        {6.50,67.5,67.5,135.0,0.577},
        {7.00,67.5,67.5,135.0,1.478},
        {8.00,67.5,67.5,135.0,1.561},
        {10.00,67.5,67.5,135.0,0.854},
        {12.00,67.5,67.5,135.0,0.428},
        {2.25,67.5,67.5,157.5,104965.376},
        {2.50,67.5,67.5,157.5,44068.077},
        {2.75,67.5,67.5,157.5,17822.597},
        {3.00,67.5,67.5,157.5,6904.813},
        {3.25,67.5,67.5,157.5,2526.187},
        {3.50,67.5,67.5,157.5,845.214},
        {3.75,67.5,67.5,157.5,238.050},
        {4.00,67.5,67.5,157.5,40.006},
        {4.25,67.5,67.5,157.5,-11.634},
        {4.50,67.5,67.5,157.5,-16.274},
        {4.75,67.5,67.5,157.5,-9.213},
        {5.00,67.5,67.5,157.5,-1.653},
        {5.25,67.5,67.5,157.5,3.701},
        {5.50,67.5,67.5,157.5,6.813},
        {5.75,67.5,67.5,157.5,8.281},
        {6.00,67.5,67.5,157.5,8.697},
        {6.50,67.5,67.5,157.5,7.984},
        {7.00,67.5,67.5,157.5,6.625},
        {8.00,67.5,67.5,157.5,4.213},
        {10.00,67.5,67.5,157.5,1.733},
        {12.00,67.5,67.5,157.5,0.788},
        {2.25,67.5,67.5,180.0,127495.009},
        {2.50,67.5,67.5,180.0,52110.200},
        {2.75,67.5,67.5,180.0,20734.035},
        {3.00,67.5,67.5,180.0,7979.177},
        {3.25,67.5,67.5,180.0,2936.504},
        {3.50,67.5,67.5,180.0,1012.423},
        {3.75,67.5,67.5,180.0,314.097},
        {4.00,67.5,67.5,180.0,80.175},
        {4.25,67.5,67.5,180.0,13.106},
        {4.50,67.5,67.5,180.0,0.880},
        {4.75,67.5,67.5,180.0,3.586},
        {5.00,67.5,67.5,180.0,8.289},
        {5.25,67.5,67.5,180.0,11.593},
        {5.50,67.5,67.5,180.0,13.159},
        {5.75,67.5,67.5,180.0,13.429},
        {6.00,67.5,67.5,180.0,12.902},
        {6.50,67.5,67.5,180.0,10.841},
        {7.00,67.5,67.5,180.0,8.611},
        {8.00,67.5,67.5,180.0,5.236},
        {10.00,67.5,67.5,180.0,2.073},
        {12.00,67.5,67.5,180.0,0.927},
        {1.75,67.5,90.0,0.0,197062.471},
        {2.00,67.5,90.0,0.0,83422.214},
        {2.25,67.5,90.0,0.0,34081.064},
        {2.50,67.5,90.0,0.0,13306.754},
        {2.75,67.5,90.0,0.0,4870.742},
        {3.00,67.5,90.0,0.0,1598.248},
        {3.25,67.5,90.0,0.0,408.828},
        {3.50,67.5,90.0,0.0,21.948},
        {3.75,67.5,90.0,0.0,-75.320},
        {4.00,67.5,90.0,0.0,-79.136},
        {4.25,67.5,90.0,0.0,-59.746},
        {4.50,67.5,90.0,0.0,-39.621},
        {4.75,67.5,90.0,0.0,-24.270},
        {5.00,67.5,90.0,0.0,-13.822},
        {5.25,67.5,90.0,0.0,-7.115},
        {5.50,67.5,90.0,0.0,-2.965},
        {5.75,67.5,90.0,0.0,-0.474},
        {6.00,67.5,90.0,0.0,0.970},
        {6.50,67.5,90.0,0.0,2.169},
        {7.00,67.5,90.0,0.0,2.352},
        {8.00,67.5,90.0,0.0,1.907},
        {10.00,67.5,90.0,0.0,0.935},
        {12.00,67.5,90.0,0.0,0.445},
        {1.75,67.5,90.0,22.5,165322.948},
        {2.00,67.5,90.0,22.5,71810.243},
        {2.25,67.5,90.0,22.5,29781.249},
        {2.50,67.5,90.0,22.5,11687.646},
        {2.75,67.5,90.0,22.5,4243.039},
        {3.00,67.5,90.0,22.5,1341.724},
        {3.25,67.5,90.0,22.5,294.370},
        {3.50,67.5,90.0,22.5,-35.837},
        {3.75,67.5,90.0,22.5,-108.796},
        {4.00,67.5,90.0,22.5,-100.983},
        {4.25,67.5,90.0,22.5,-75.242},
        {4.50,67.5,90.0,22.5,-51.186},
        {4.75,67.5,90.0,22.5,-33.160},
        {5.00,67.5,90.0,22.5,-20.782},
        {5.25,67.5,90.0,22.5,-12.630},
        {5.50,67.5,90.0,22.5,-7.377},
        {5.75,67.5,90.0,22.5,-4.033},
        {6.00,67.5,90.0,22.5,-1.921},
        {6.50,67.5,90.0,22.5,0.219},
        {7.00,67.5,90.0,22.5,1.001},
        {8.00,67.5,90.0,22.5,1.210},
        {10.00,67.5,90.0,22.5,0.702},
        {12.00,67.5,90.0,22.5,0.350},
        {1.75,67.5,90.0,45.0,109807.414},
        {2.00,67.5,90.0,45.0,49857.300},
        {2.25,67.5,90.0,45.0,21171.607},
        {2.50,67.5,90.0,45.0,8296.981},
        {2.75,67.5,90.0,45.0,2878.908},
        {3.00,67.5,90.0,45.0,766.105},
        {3.25,67.5,90.0,45.0,30.358},
        {3.50,67.5,90.0,45.0,-172.037},
        {3.75,67.5,90.0,45.0,-188.823},
        {4.00,67.5,90.0,45.0,-153.597},
        {4.25,67.5,90.0,45.0,-112.675},
        {4.50,67.5,90.0,45.0,-79.149},
        {4.75,67.5,90.0,45.0,-54.660},
        {5.00,67.5,90.0,45.0,-37.609},
        {5.25,67.5,90.0,45.0,-25.962},
        {5.50,67.5,90.0,45.0,-18.039},
        {5.75,67.5,90.0,45.0,-12.630},
        {6.00,67.5,90.0,45.0,-8.906},
        {6.50,67.5,90.0,45.0,-4.491},
        {7.00,67.5,90.0,45.0,-2.260},
        {8.00,67.5,90.0,45.0,-0.471},
        {10.00,67.5,90.0,45.0,0.141},
        {12.00,67.5,90.0,45.0,0.120},
        {1.75,67.5,90.0,67.5,72482.334},
        {2.00,67.5,90.0,67.5,33789.851},
        {2.25,67.5,90.0,67.5,14425.060},
        {2.50,67.5,90.0,67.5,5485.719},
        {2.75,67.5,90.0,67.5,1691.754},
        {3.00,67.5,90.0,67.5,243.347},
        {3.25,67.5,90.0,67.5,-218.382},
        {3.50,67.5,90.0,67.5,-304.075},
        {3.75,67.5,90.0,67.5,-267.854},
        {4.00,67.5,90.0,67.5,-206.059},
        {4.25,67.5,90.0,67.5,-150.150},
        {4.50,67.5,90.0,67.5,-107.177},
        {4.75,67.5,90.0,67.5,-76.213},
        {5.00,67.5,90.0,67.5,-54.473},
        {5.25,67.5,90.0,67.5,-39.318},
        {5.50,67.5,90.0,67.5,-28.718},
        {5.75,67.5,90.0,67.5,-21.238},
        {6.00,67.5,90.0,67.5,-15.898},
        {6.50,67.5,90.0,67.5,-9.202},
        {7.00,67.5,90.0,67.5,-5.522},
        {8.00,67.5,90.0,67.5,-2.153},
        {10.00,67.5,90.0,67.5,-0.420},
        {12.00,67.5,90.0,67.5,-0.110},
        {1.75,67.5,90.0,90.0,60278.342},
        {2.00,67.5,90.0,90.0,28310.279},
        {2.25,67.5,90.0,90.0,12034.406},
        {2.50,67.5,90.0,90.0,4454.747},
        {2.75,67.5,90.0,90.0,1242.702},
        {3.00,67.5,90.0,90.0,40.006},
        {3.25,67.5,90.0,90.0,-317.505},
        {3.50,67.5,90.0,90.0,-357.687},
        {3.75,67.5,90.0,90.0,-300.332},
        {4.00,67.5,90.0,90.0,-227.753},
        {4.25,67.5,90.0,90.0,-165.687},
        {4.50,67.5,90.0,90.0,-118.807},
        {4.75,67.5,90.0,90.0,-85.156},
        {5.00,67.5,90.0,90.0,-61.469},
        {5.25,67.5,90.0,90.0,-44.857},
        {5.50,67.5,90.0,90.0,-33.146},
        {5.75,67.5,90.0,90.0,-24.807},
        {6.00,67.5,90.0,90.0,-18.796},
        {6.50,67.5,90.0,90.0,-11.155},
        {7.00,67.5,90.0,90.0,-6.873},
        {8.00,67.5,90.0,90.0,-2.849},
        {10.00,67.5,90.0,90.0,-0.652},
        {12.00,67.5,90.0,90.0,-0.205},
        {2.00,90.0,90.0,0.0,41876.236},
        {2.25,90.0,90.0,0.0,16914.427},
        {2.50,90.0,90.0,0.0,6560.399},
        {2.75,90.0,90.0,0.0,2427.588},
        {3.00,90.0,90.0,0.0,851.149},
        {3.25,90.0,90.0,0.0,283.915},
        {3.50,90.0,90.0,0.0,96.141},
        {3.75,90.0,90.0,0.0,41.866},
        {4.00,90.0,90.0,0.0,29.843},
        {4.25,90.0,90.0,0.0,28.603},
        {4.50,90.0,90.0,0.0,28.567},
        {4.75,90.0,90.0,0.0,27.561},
        {5.00,90.0,90.0,0.0,25.586},
        {5.25,90.0,90.0,0.0,23.079},
        {5.50,90.0,90.0,0.0,20.425},
        {5.75,90.0,90.0,0.0,17.863},
        {6.00,90.0,90.0,0.0,15.518},
        {6.50,90.0,90.0,0.0,11.630},
        {7.00,90.0,90.0,0.0,8.738},
        {8.00,90.0,90.0,0.0,5.079},
        {10.00,90.0,90.0,0.0,1.936},
        {12.00,90.0,90.0,0.0,0.842},
        {1.75,90.0,90.0,22.5,88136.029},
        {2.00,90.0,90.0,22.5,37292.480},
        {2.25,90.0,90.0,22.5,15102.493},
        {2.50,90.0,90.0,22.5,5816.713},
        {2.75,90.0,90.0,22.5,2103.002},
        {3.00,90.0,90.0,22.5,696.031},
        {3.25,90.0,90.0,22.5,200.878},
        {3.50,90.0,90.0,22.5,46.235},
        {3.75,90.0,90.0,22.5,8.841},
        {4.00,90.0,90.0,22.5,6.450},
        {4.25,90.0,90.0,22.5,11.295},
        {4.50,90.0,90.0,22.5,15.406},
        {4.75,90.0,90.0,22.5,17.373},
        {5.00,90.0,90.0,22.5,17.599},
        {5.25,90.0,90.0,22.5,16.755},
        {5.50,90.0,90.0,22.5,15.372},
        {5.75,90.0,90.0,22.5,13.794},
        {6.00,90.0,90.0,22.5,12.217},
        {6.50,90.0,90.0,22.5,9.408},
        {7.00,90.0,90.0,22.5,7.201},
        {8.00,90.0,90.0,22.5,4.286},
        {10.00,90.0,90.0,22.5,1.670},
        {12.00,90.0,90.0,22.5,0.733},
        {1.75,90.0,90.0,45.0,64486.993},
        {2.00,90.0,90.0,45.0,27715.552},
        {2.25,90.0,90.0,45.0,11173.868},
        {2.50,90.0,90.0,45.0,4154.015},
        {2.75,90.0,90.0,45.0,1358.323},
        {3.00,90.0,90.0,45.0,332.626},
        {3.25,90.0,90.0,45.0,3.359},
        {3.50,90.0,90.0,45.0,-73.590},
        {3.75,90.0,90.0,45.0,-70.828},
        {4.00,90.0,90.0,45.0,-50.091},
        {4.25,90.0,90.0,45.0,-30.565},
        {4.50,90.0,90.0,45.0,-16.425},
        {4.75,90.0,90.0,45.0,-7.261},
        {5.00,90.0,90.0,45.0,-1.708},
        {5.25,90.0,90.0,45.0,1.470},
        {5.50,90.0,90.0,45.0,3.165},
        {5.75,90.0,90.0,45.0,3.966},
        {6.00,90.0,90.0,45.0,4.243},
        {6.50,90.0,90.0,45.0,4.043},
        {7.00,90.0,90.0,45.0,3.488},
        {8.00,90.0,90.0,45.0,2.370},
        {10.00,90.0,90.0,45.0,1.027},
        {12.00,90.0,90.0,45.0,0.468},
        {1.75,90.0,90.0,67.5,45846.117},
        {2.00,90.0,90.0,67.5,19741.762},
        {2.25,90.0,90.0,67.5,7750.282},
        {2.50,90.0,90.0,67.5,2647.592},
        {2.75,90.0,90.0,67.5,660.838},
        {3.00,90.0,90.0,67.5,-17.078},
        {3.25,90.0,90.0,67.5,-190.479},
        {3.50,90.0,90.0,67.5,-192.605},
        {3.75,90.0,90.0,67.5,-150.442},
        {4.00,90.0,90.0,67.5,-106.734},
        {4.25,90.0,90.0,67.5,-72.531},
        {4.50,90.0,90.0,67.5,-48.335},
        {4.75,90.0,90.0,67.5,-31.949},
        {5.00,90.0,90.0,67.5,-21.051},
        {5.25,90.0,90.0,67.5,-13.839},
        {5.50,90.0,90.0,67.5,-9.057},
        {5.75,90.0,90.0,67.5,-5.871},
        {6.00,90.0,90.0,67.5,-3.736},
        {6.50,90.0,90.0,67.5,-1.325},
        {7.00,90.0,90.0,67.5,-0.224},
        {8.00,90.0,90.0,67.5,0.454},
        {10.00,90.0,90.0,67.5,0.385},
        {12.00,90.0,90.0,67.5,0.204},
        {1.75,90.0,90.0,90.0,39161.783},
        {2.00,90.0,90.0,90.0,16794.228},
        {2.25,90.0,90.0,90.0,6450.056},
        {2.50,90.0,90.0,90.0,2061.543},
        {2.75,90.0,90.0,90.0,383.725},
        {3.00,90.0,90.0,90.0,-158.437},
        {3.25,90.0,90.0,90.0,-269.823},
        {3.50,90.0,90.0,90.0,-241.699},
        {3.75,90.0,90.0,90.0,-183.412},
        {4.00,90.0,90.0,90.0,-130.228},
        {4.25,90.0,90.0,90.0,-89.945},
        {4.50,90.0,90.0,90.0,-61.576},
        {4.75,90.0,90.0,90.0,-42.191},
        {5.00,90.0,90.0,90.0,-29.074},
        {5.25,90.0,90.0,90.0,-20.186},
        {5.50,90.0,90.0,90.0,-14.124},
        {5.75,90.0,90.0,90.0,-9.948},
        {6.00,90.0,90.0,90.0,-7.042},
        {6.50,90.0,90.0,90.0,-3.548},
        {7.00,90.0,90.0,90.0,-1.763},
        {8.00,90.0,90.0,90.0,-0.339},
        {10.00,90.0,90.0,90.0,0.119},
        {12.00,90.0,90.0,90.0,0.094}
    };
    return vals;
};

auto check_B2cl_vals() {
    struct val {double T_K, B2cl_cm3mol; };
    std::vector<val> vals = { 
        { 150.00, -682.34 },
        { 155.00,-619.38 },
        { 160.00,-565.40 },
        { 165.00,-518.73 },
        { 170.00,-478.05 },
        { 175.00,-442.34 },
        { 180.00,-410.79 },
        { 185.00,-382.74 },
        { 190.00,-357.67 },
        { 195.00,-335.15 },
        { 200.00,-314.83 },
        { 205.00,-296.41 },
        { 210.00,-279.64 },
        { 215.00,-264.32 },
        { 220.00,-250.28 },
        { 225.00,-237.37 },
        { 230.00,-225.46 },
        { 235.00,-214.45 },
        { 240.00,-204.23 },
        { 245.00,-194.73 },
        { 250.00,-185.88 },
        { 255.00,-177.61 },
        { 260.00,-169.87 },
        { 265.00,-162.62 },
        { 270.00,-155.80 },
        { 273.15,-151.72 },
        { 275.00,-149.39 },
        { 280.00,-143.34 },
        { 285.00,-137.63 },
        { 290.00,-132.23 },
        { 295.00,-127.12 },
        { 298.15,-124.04 },
        { 300.00,-122.27 },
        { 305.00,-117.67 },
        { 310.00,-113.29 },
        { 315.00,-109.13 },
        { 320.00,-105.16 },
        { 325.00,-101.38 },
        { 330.00,-97.77 },
        { 335.00,-94.32 },
        { 340.00,-91.01 },
        { 345.00,-87.85 },
        { 350.00,-84.82 },
        { 355.00,-81.91 },
        { 360.00,-79.12 },
        { 365.00,-76.44 },
        { 370.00,-73.87 },
        { 375.00,-71.39 },
        { 380.00,-69.00 },
        { 385.00,-66.70 },
        { 390.00,-64.49 },
        { 395.00,-62.35 },
        { 400.00,-60.29 },
        { 410.00,-56.37 },
        { 420.00,-52.71 },
        { 430.00,-49.28 },
        { 440.00,-46.07 },
        { 450.00,-43.04 },
        { 460.00,-40.19 },
        { 470.00,-37.51 },
        { 480.00,-34.97 },
        { 490.00,-32.57 },
        { 500.00,-30.29 },
        { 520.00,-26.09 },
        { 540.00,-22.28 },
        { 560.00,-18.83 },
        { 580.00,-15.68 },
        { 600.00,-12.79 },
        { 620.00,-10.14 },
        { 640.00,-7.70 },
        { 660.00,-5.45 },
        { 680.00,-3.36 },
        { 700.00,-1.42 },
        { 750.00,2.87 },
        { 800.00,6.50 },
        { 850.00,9.61 },
        { 900.00,12.29 },
        { 950.00,14.63 },
        { 1000.00,16.69 },
        { 1100.00,20.11 },
        { 1200.00,22.84 },
        { 1300.00,25.05 },
        { 1400.00,26.87 },
        { 1500.00,28.38 },
        { 1600.00,29.65 },
        { 1700.00,30.73 },
        { 1800.00,31.65 },
        { 1900.00,32.44 },
        { 2000.00,33.13 }, };
    return vals;
}

}; /* namespace HellmannCarbonDioxide*/

namespace CarbonDioxide {

    /// Parameters for the 3-site model with Lennard-Jones site-site interactions and point quadrupole
    struct ThreeCLJQArgs {
        double l_CO, // Angstrom
            epskBCC, // K
            epskBOO, // K
            sigmaCC, // Angstrom
            sigmaOO, // Angstrom
            Q_DA;    // Debye*Angstrom
    };
    
    auto get_3CLJQ_integrator(const ThreeCLJQArgs &args) {

        const std::vector<char> types = { 'O', 'C', 'O' }; 
        // X,Y,Z coordinates, in Angstrom
        const std::vector<std::vector<double>> coords0 = {
            {-args.l_CO, 0, 0},
            { 0.0000, 0, 0},
            { args.l_CO, 0, 0},
        };
        using MolType = Molecule<double>;
        MolType m0(coords0);
        //static_assert(types.size() == coords0.size(), "types and coords0 are not the same size");
        // Alike interactions are as given in Merker
        // sigma are in Angstrom, epsilon/kB are in K
        // Unlike interactions are modeled with Lorentz-Berthelot mixing rules (communication with R. Fingerhut & J. Vrabec)
        auto epskBCO = sqrt(args.epskBCC * args.epskBOO);
        auto sigmaCO = (args.sigmaCC + args.sigmaOO)/2;
        std::map<std::tuple<char, char>, std::tuple<double, double>> coeffs = {
             {{'C','C'}, {args.epskBCC, args.sigmaCC}},
             {{'C','O'}, {epskBCO, sigmaCO}},
             {{'O','C'}, {epskBCO, sigmaCO}},
             {{'O','O'}, {args.epskBOO, args.sigmaOO}},
        };

        // Connect up the lambda functions for site-site interactions
        Integrator<double> integr(m0, m0);
        for (auto i = 0; i < types.size(); ++i) {
            auto chari = types[i];
            for (auto j = 0; j < types.size(); ++j) {
                auto charj = types[j];
                // Collect the coefficients for the given i,j pair
                auto [epskB_ij, sigma_ij] = coeffs[std::make_tuple(chari, charj)];

                // The lambda function that will be used to evaluate the site-site interaction
                std::function<double(double)> f = [epskB_ij, sigma_ij](double R_ij) -> double {
                    double r6 = pow(sigma_ij/R_ij, 6);
                    double val = 4*epskB_ij*(r6*r6 - r6); // returned value in terms of V/kB, in units of K
                    return val;
                };
                integr.get_evaluator().add_potential(i, j, f);
            }
        }
        // Convert quadrupolar moment given in Debye*Angstrom to SI units of C*m^2
        auto Q_Cm2 = 3.33564e-30 / 1e10 * args.Q_DA;
        // Also add the point quadrupolar contribution to the potential
        // See Stoll FPE 2001, Eq. 1
        std::function<double(const MolType&, const MolType&)> g = [Q_Cm2](const MolType& mol1, const MolType& mol2) {
            Eigen::Array3d rCOM = mol1.get_xyz_atom(1) - mol2.get_xyz_atom(1); ///< Distance vector between center-of-mass of moleccules
            Eigen::Array3d r1 = mol1.get_xyz_atom(2) - mol1.get_xyz_atom(0); ///< Vector along the centerline of molecule 1
            Eigen::Array3d r2 = mol2.get_xyz_atom(2) - mol2.get_xyz_atom(0); ///< Vector along the centerline of molecule 2
            double mag1 = r1.matrix().norm(), mag2 = r2.matrix().norm(), r_ij_A = rCOM.matrix().norm();

            // Reminder: A \dot B = |A||B|cos(theta), where theta is angle between them
            double c_i = rCOM.matrix().dot(r1.matrix())/(mag1*r_ij_A); // cosine of angle between centerline of molecule 1 and vector between COM
            double c_j = rCOM.matrix().dot(r2.matrix())/(mag2*r_ij_A); // cosine of angle between centerline of molecule 2 and vector between COM
            double c = r1.matrix().dot(r2.matrix())/(mag1*mag2); // cosine of angle between centerlines of molecules 2 and 1

            auto r_ij_m = r_ij_A/1e10; ///< center-of-mass distance, in meters

            // Stoll FPE 2001, Eq. 1, with a dimensionally consistent formulation in Base-SI units
            // Converted from ESU to SI units: https://en.wikibooks.org/wiki/Molecular_Simulation/Quadrupole-Quadrupole_Interactions#Appendix
            constexpr auto epsilon_0 = 8.8541878128e-12, ///< Vacuum permittivity, C^2/m^2/N
                           k_B = 1.380649e-23; ///< Boltzmann constant, J/K
            // Used bracket term from mardyn: https://github.com/ls1mardyn/ls1-mardyn/blob/3febfd4635f32df6b931aceed75ce162657b1fe2/src/molecules/potforce.h#L108
            double bracket = c - 5.0*c_i*c_j; // Not as in in Stoll!
            double potential = 6.0/8.0*Q_Cm2*Q_Cm2/(4.0*M_PI*epsilon_0*pow(r_ij_m, 5))*(1.0-5.0*(c_i*c_i +c_j*c_j) -15.0*c_i*c_i*c_j*c_j + 2.0*bracket*bracket);
            return potential/k_B;
        };
        integr.get_evaluator().add_generic_contribution(g);
        return integr;
    }

    /// Get the integrator of Merker, JCP, 2010: https://doi.org/10.1063/1.3434530
    auto get_Merker_integrator() {
        auto a = ThreeCLJQArgs();
        a.l_CO = 1.2869; a.sigmaCC = 2.8137; a.epskBCC = 12.3724; a.sigmaOO = 2.9755; a.epskBOO = 100.493; a.Q_DA = 4.0739;
        return get_3CLJQ_integrator(a);
    }

    /// Get the integrator of Vrabec, Stoll, Hasse, JPCB, 2001: https://doi.org/10.1021/jp012542o
    auto get_Vrabec_integrator() {
        auto a = GenericModels::TwoCLJQArgs();
        a.l_sitesite = 2.4176; a.sigmaAA = 2.9847; a.epskBAA = 133.22; a.Q_DA = 3.7938; a.sigmaBB = a.sigmaAA; a.epskBBB = a.epskBAA;
        return GenericModels::get_2CLJQ_integrator(a);
    }

    /// Get the integrator of Moeller and Fischer, FPE, 1994: https://doi.org/10.1016/0378-3812(94)80002-2
    auto get_Moeller_integrator() {
        auto a = GenericModels::TwoCLJQArgs();
        auto Q_DA = -12.2e-40 / 3.33564e-30 * 1e10; // C*m^2 / (C*m/D) * (A/m) // This quantity turns into -3.6574690314302503
        a.l_sitesite = 0.699*3.0354; a.sigmaAA = 3.0354; a.epskBAA = 125.317; a.Q_DA = Q_DA; a.sigmaBB = a.sigmaAA; a.epskBBB = a.epskBAA;
        return GenericModels::get_2CLJQ_integrator(a);
    }


    /// Parameters for the 3-site model with Lennard-Jones site-site interactions and point charges
    struct ThreeCLJCArgs {
        double l_CO, // Angstrom
            epskBCC, // K
            epskBOO, // K
            sigmaCC, // Angstrom
            sigmaOO, // Angstrom
            q_C,     // e
            q_O;     // e
    };

    auto get_3CLJC_integrator(const ThreeCLJCArgs& args) {

        const std::vector<char> types = { 'O', 'C', 'O' };
        // X,Y,Z coordinates, in Angstrom
        const std::vector<std::vector<double>> coords0 = {
            {-args.l_CO, 0, 0},
            { 0.0000, 0, 0},
            { args.l_CO, 0, 0},
        };
        using MolType = Molecule<double>;
        MolType m0(coords0);
        //static_assert(types.size() == coords0.size(), "types and coords0 are not the same size");
        // sigma are in Angstrom, epsilon/kB are in K
        // Unlike interactions are modeled with Lorentz-Berthelot mixing rules (communication with R. Fingerhut & J. Vrabec)
        auto epskBCO = sqrt(args.epskBCC * args.epskBOO);
        auto sigmaCO = (args.sigmaCC + args.sigmaOO) / 2;
        // 1 e = 1.602176634e-19 C
        // k_e = 8.9875517873681764e9 N*m^2/C^2
        auto C_per_e = 1.602176634e-19;
        auto k_B = 1.380649e-23; // Boltzmann constant in J/K
        auto k_e = 8.9875517873681764e9; // Coulomb constant in N*m^2/C^2; slightly more precise value posible
        auto charge_factor = C_per_e*C_per_e*k_e/k_B;
        auto total_charge = args.q_C + 2 * args.q_O;
        if (std::abs(total_charge) > 1e-10) {
            throw std::invalid_argument("Charge does not add to zero;");
        }

        std::map<std::tuple<char, char>, std::tuple<double, double, double>> coeffs = {
             {{'C','C'}, {args.epskBCC, args.sigmaCC, charge_factor*args.q_C*args.q_C}},
             {{'C','O'}, {epskBCO,           sigmaCO, charge_factor*args.q_C*args.q_O}},
             {{'O','C'}, {epskBCO,           sigmaCO, charge_factor*args.q_O*args.q_C}},
             {{'O','O'}, {args.epskBOO, args.sigmaOO, charge_factor*args.q_O*args.q_O}},
        };

        // Connect up the lambda functions for site-site interactions
        Integrator<double> integr(m0, m0);
        for (auto i = 0; i < types.size(); ++i) {
            auto chari = types[i];
            for (auto j = 0; j < types.size(); ++j) {
                auto charj = types[j];
                // Collect the coefficients for the given i,j pair
                auto [epskB_ij, sigma_ij, qiqj] = coeffs[std::make_tuple(chari, charj)];

                // The lambda function that will be used to evaluate the site-site interaction
                std::function<double(double)> f = [epskB_ij, sigma_ij, qiqj](double R_ij_A) -> double {

                    auto R_ij_m = R_ij_A / 1e10; ///< center-of-mass distance, in meters

                    double r6 = pow(sigma_ij / R_ij_A, 6);
                    double valLJ = 4 * epskB_ij * (r6 * r6 - r6); // returned value in terms of V/kB, in units of K
                    double valCharge = qiqj / R_ij_m;
                    return valLJ + valCharge;
                };
                integr.get_evaluator().add_potential(i, j, f);
            }
        }
        return integr;
    }
    
    /// Get the integrator of Potoff and Siemann, AIChE J., 2001: https://doi.org/10.1002/aic.690470719
    auto get_PotoffSiepmann_integrator() {
        auto a = ThreeCLJCArgs();
        a.l_CO = 1.16; a.sigmaCC = 2.80; a.epskBCC = 27.0; a.sigmaOO = 3.05; a.epskBOO = 79.0; a.q_C = 0.70; a.q_O = -a.q_C / 2;
        return get_3CLJC_integrator(a);
    }
    /// Get the integrator of Murthy, Singer, and McDonald, Mol. Phys, 1981: https://doi.org/10.1080/00268978100102331
    auto get_Murthy_integrator() {
        auto a = ThreeCLJCArgs();
        a.l_CO = 1.149; a.sigmaCC = 2.785; a.epskBCC = 29.0; a.sigmaOO = 3.014; a.epskBOO = 83.1; a.q_C = 0.5957; a.q_O = -a.q_C / 2;
        return get_3CLJC_integrator(a);
    }
    /// Get the integrator of Harris and Yung, EPM2 model, rigid: https://pubs.acs.org/doi/pdf/10.1021/j100031a034
    auto get_HarrisYung_integrator() {
        auto a = ThreeCLJCArgs();
        a.l_CO = 1.149; a.sigmaCC = 2.757; a.epskBCC = 28.129; a.sigmaOO = 3.033; a.epskBOO = 80.507; a.q_C = 0.6512; a.q_O = -a.q_C/2;
        return get_3CLJC_integrator(a);
    }
    /// Get the integrator of Zhang and Duan, JCP, 2005: https://doi.org/10.1063/1.1924700
    auto get_ZhangDuan_integrator() {
        auto a = ThreeCLJCArgs();
        a.l_CO = 1.163; a.sigmaCC = 2.7918; a.epskBCC = 28.845; a.sigmaOO = 3.0; a.epskBOO = 82.656; a.q_C = 0.5888; a.q_O = -a.q_C/2;
        return get_3CLJC_integrator(a);
    }

    /// Parameters for the 3-site model with EXP-6 site-site interactions and point charges
    struct ThreeCEXP6CArgs {
        double l_CO, // Angstrom
            epskBCC, // K
            epskBOO, // K
            sigmaCC, // Angstrom
            sigmaOO, // Angstrom
            alphaCC, // 
            alphaOO, // 
            q_C,     // e
            q_O;     // e
    };

    auto get_3CEXP6C_integrator(const ThreeCEXP6CArgs& args) {

        const std::vector<char> types = { 'O', 'C', 'O' };
        // X,Y,Z coordinates, in Angstrom
        const std::vector<std::vector<double>> coords0 = {
            {-args.l_CO, 0, 0},
            { 0.0000, 0, 0},
            { args.l_CO, 0, 0},
        };
        using MolType = Molecule<double>;
        MolType m0(coords0);
        //static_assert(types.size() == coords0.size(), "types and coords0 are not the same size");
        // sigma are in Angstrom, epsilon/kB are in K
        // Unlike interactions are modeled with Lorentz-Berthelot mixing rules (communication with R. Fingerhut & J. Vrabec)
        auto epskBCO = sqrt(args.epskBCC * args.epskBOO);
        auto sigmaCO = (args.sigmaCC + args.sigmaOO)/2;
        auto alphaCO = sqrt(args.alphaCC * args.alphaOO);
        // 1 e = 1.602176634e-19 C
        // k_e = 8.9875517873681764e9 N*m^2/C^2
        auto C_per_e = 1.602176634e-19;
        auto k_B = 1.380649e-23; // Boltzmann constant in J/K
        auto k_e = 8.9875517873681764e9; // Coulomb constant in N*m^2/C^2; slightly more precise value posible
        auto charge_factor = C_per_e * C_per_e * k_e / k_B;
        auto total_charge = args.q_C + 2 * args.q_O;
        if (std::abs(total_charge) > 1e-10) {
            throw std::invalid_argument("Charge does not add to zero;");
        }

        // The partial charges are in units of e, charge_factor converts to V/kB when separation is in meters
        std::map<std::tuple<char, char>, std::tuple<double, double, double, double>> coeffs = {
             {{'C','C'}, {args.epskBCC, args.sigmaCC, args.alphaCC, charge_factor * args.q_C * args.q_C}},
             {{'C','O'}, {epskBCO,      sigmaCO,      alphaCO,      charge_factor * args.q_C * args.q_O}},
             {{'O','C'}, {epskBCO,      sigmaCO,      alphaCO,      charge_factor * args.q_O * args.q_C}},
             {{'O','O'}, {args.epskBOO, args.sigmaOO, args.alphaOO, charge_factor * args.q_O * args.q_O}},
        };

        // Connect up the lambda functions for site-site interactions
        Integrator<double> integr(m0, m0);
        for (auto i = 0; i < types.size(); ++i) {
            auto chari = types[i];
            for (auto j = 0; j < types.size(); ++j) {
                auto charj = types[j];
                // Collect the coefficients for the given i,j pair
                auto [epskB_ij, sigma_ij, alpha_ij, kekBqiqj] = coeffs[std::make_tuple(chari, charj)];

                // Calculate some parameters for EXP6 potential
                //
                // Calculate the radius where the potential is at its maximal value
                // by golden section minimization
                auto alpha = alphaCO;
                auto [rstarpotmax, valpotmax] = gss([alpha](double rstar) {
                    double pot = 1 / (1 - 6 / alpha) * (6 / alpha * exp(alpha * (1 - rstar)) - pow(rstar, -6));
                    return -pot;
                    }, 0.1, 1, 1e-10);
                valpotmax *= -1;

                // Calculate the value of sigma^* for the given value of alpha, either r_m or sigma can be defined,
                // they are linearly related to each other.  Here sigma is specified, and we need to obtain r_m from
                // sigma

                auto sigma_star = 0.8891039655264765; // non-dimensional, function of alpha, given by sigma^* = sigma/r_m, where sigma is the value of r giving potential of zero value

                auto R_min_ij_A = sigma_ij / sigma_star;

                // The lambda function that will be used to evaluate the site-site interaction
                std::function<double(double)> f = [epskB_ij, R_min_ij_A, alpha_ij, kekBqiqj, rstarpotmax, valpotmax](double R_ij_A) -> double {

                    auto R_ij_m = R_ij_A / 1e10; ///< site-site distance, in meters

                    double rstar = R_ij_A / R_min_ij_A; ///< reduced site-site distance
                    double valEXP6 = (rstar > rstarpotmax) ? epskB_ij/(1-6/alpha_ij)*(6/alpha_ij*exp(alpha_ij*(1-rstar)) - pow(rstar, -6)) : valpotmax; // returned value in terms of V/kB, in units of K
    
                    double valCharge = kekBqiqj / R_ij_m;
                    return valEXP6 + valCharge;
                };
                integr.get_evaluator().add_potential(i, j, f);
            }
        }
        return integr;
    }
    /// Get the integrator of Errington, Thesis,  Cornell University, 1999
    /// Also see: J. J. POTOFF , J. R. ERRINGTON & A. Z. PANAGIOTOPOULOS (1999)
    /// Molecular simulation of phase equilibria for mixtures of polar and non - polar components, Molecular
    ///    Physics, 97:10, 1073 - 1083, DOI : 10.1080/00268979909482908
    auto get_Errington_integrator() {
        auto a = ThreeCEXP6CArgs();
        a.l_CO = 1.1433; a.alphaCC = 14; a.epskBCC = 29.07; a.sigmaCC = 2.753; a.alphaOO = 14; a.sigmaOO = 3.029; a.epskBOO = 83.20; a.q_C = 0.6466; a.q_O = -a.q_C / 2;
        return get_3CEXP6C_integrator(a);
    }

} /* namespace CarbonDioxide*/